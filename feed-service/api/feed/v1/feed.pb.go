// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: feed/v1/feed.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,2,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	Offset        int64                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"` // 时间游标，秒级时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeedRequest) Reset() {
	*x = FeedRequest{}
	mi := &file_feed_v1_feed_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedRequest) ProtoMessage() {}

func (x *FeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feed_v1_feed_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedRequest.ProtoReflect.Descriptor instead.
func (*FeedRequest) Descriptor() ([]byte, []int) {
	return file_feed_v1_feed_proto_rawDescGZIP(), []int{0}
}

func (x *FeedRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FeedRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *FeedRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type FeedReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Videos        []*Video               `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
	NextOffset    int64                  `protobuf:"varint,2,opt,name=next_offset,json=nextOffset,proto3" json:"next_offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeedReply) Reset() {
	*x = FeedReply{}
	mi := &file_feed_v1_feed_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedReply) ProtoMessage() {}

func (x *FeedReply) ProtoReflect() protoreflect.Message {
	mi := &file_feed_v1_feed_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedReply.ProtoReflect.Descriptor instead.
func (*FeedReply) Descriptor() ([]byte, []int) {
	return file_feed_v1_feed_proto_rawDescGZIP(), []int{1}
}

func (x *FeedReply) GetVideos() []*Video {
	if x != nil {
		return x.Videos
	}
	return nil
}

func (x *FeedReply) GetNextOffset() int64 {
	if x != nil {
		return x.NextOffset
	}
	return 0
}

type Video struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       int64                  `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	CoverUrl      string                 `protobuf:"bytes,3,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`
	AuthorId      int64                  `protobuf:"varint,4,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	LikeCount     int64                  `protobuf:"varint,5,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	CommentCount  int64                  `protobuf:"varint,6,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`
	IsLiked       bool                   `protobuf:"varint,7,opt,name=is_liked,json=isLiked,proto3" json:"is_liked,omitempty"`
	PublishTime   int64                  `protobuf:"varint,8,opt,name=publish_time,json=publishTime,proto3" json:"publish_time,omitempty"`
	IsFavorite    bool                   `protobuf:"varint,10,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"`
	Author        *Author                `protobuf:"bytes,11,opt,name=author,proto3" json:"author,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Video) Reset() {
	*x = Video{}
	mi := &file_feed_v1_feed_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Video) ProtoMessage() {}

func (x *Video) ProtoReflect() protoreflect.Message {
	mi := &file_feed_v1_feed_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Video.ProtoReflect.Descriptor instead.
func (*Video) Descriptor() ([]byte, []int) {
	return file_feed_v1_feed_proto_rawDescGZIP(), []int{2}
}

func (x *Video) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *Video) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Video) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *Video) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Video) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *Video) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *Video) GetIsLiked() bool {
	if x != nil {
		return x.IsLiked
	}
	return false
}

func (x *Video) GetPublishTime() int64 {
	if x != nil {
		return x.PublishTime
	}
	return 0
}

func (x *Video) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

func (x *Video) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

type Author struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AvatarUrl     string                 `protobuf:"bytes,3,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Author) Reset() {
	*x = Author{}
	mi := &file_feed_v1_feed_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Author) ProtoMessage() {}

func (x *Author) ProtoReflect() protoreflect.Message {
	mi := &file_feed_v1_feed_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Author.ProtoReflect.Descriptor instead.
func (*Author) Descriptor() ([]byte, []int) {
	return file_feed_v1_feed_proto_rawDescGZIP(), []int{3}
}

func (x *Author) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Author) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Author) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

var File_feed_v1_feed_proto protoreflect.FileDescriptor

const file_feed_v1_feed_proto_rawDesc = "" +
	"\n" +
	"\x12feed/v1/feed.proto\x12\x04feed\x1a\x1cgoogle/api/annotations.proto\"_\n" +
	"\vFeedRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12\"\n" +
	"\frefreshToken\x18\x02 \x01(\tR\frefreshToken\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x03R\x06offset\"Q\n" +
	"\tFeedReply\x12#\n" +
	"\x06videos\x18\x01 \x03(\v2\v.feed.VideoR\x06videos\x12\x1f\n" +
	"\vnext_offset\x18\x02 \x01(\x03R\n" +
	"nextOffset\"\xbb\x02\n" +
	"\x05Video\x12\x19\n" +
	"\bvideo_id\x18\x01 \x01(\x03R\avideoId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1b\n" +
	"\tcover_url\x18\x03 \x01(\tR\bcoverUrl\x12\x1b\n" +
	"\tauthor_id\x18\x04 \x01(\x03R\bauthorId\x12\x1d\n" +
	"\n" +
	"like_count\x18\x05 \x01(\x03R\tlikeCount\x12#\n" +
	"\rcomment_count\x18\x06 \x01(\x03R\fcommentCount\x12\x19\n" +
	"\bis_liked\x18\a \x01(\bR\aisLiked\x12!\n" +
	"\fpublish_time\x18\b \x01(\x03R\vpublishTime\x12\x1f\n" +
	"\vis_favorite\x18\n" +
	" \x01(\bR\n" +
	"isFavorite\x12$\n" +
	"\x06author\x18\v \x01(\v2\f.feed.AuthorR\x06author\"K\n" +
	"\x06Author\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x03 \x01(\tR\tavatarUrl2O\n" +
	"\vFeedService\x12@\n" +
	"\aGetFeed\x12\x11.feed.FeedRequest\x1a\x0f.feed.FeedReply\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/api/feedB\x10Z\x0efeed/api/v1;v1b\x06proto3"

var (
	file_feed_v1_feed_proto_rawDescOnce sync.Once
	file_feed_v1_feed_proto_rawDescData []byte
)

func file_feed_v1_feed_proto_rawDescGZIP() []byte {
	file_feed_v1_feed_proto_rawDescOnce.Do(func() {
		file_feed_v1_feed_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_feed_v1_feed_proto_rawDesc), len(file_feed_v1_feed_proto_rawDesc)))
	})
	return file_feed_v1_feed_proto_rawDescData
}

var file_feed_v1_feed_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_feed_v1_feed_proto_goTypes = []any{
	(*FeedRequest)(nil), // 0: feed.FeedRequest
	(*FeedReply)(nil),   // 1: feed.FeedReply
	(*Video)(nil),       // 2: feed.Video
	(*Author)(nil),      // 3: feed.Author
}
var file_feed_v1_feed_proto_depIdxs = []int32{
	2, // 0: feed.FeedReply.videos:type_name -> feed.Video
	3, // 1: feed.Video.author:type_name -> feed.Author
	0, // 2: feed.FeedService.GetFeed:input_type -> feed.FeedRequest
	1, // 3: feed.FeedService.GetFeed:output_type -> feed.FeedReply
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_feed_v1_feed_proto_init() }
func file_feed_v1_feed_proto_init() {
	if File_feed_v1_feed_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_feed_v1_feed_proto_rawDesc), len(file_feed_v1_feed_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_feed_v1_feed_proto_goTypes,
		DependencyIndexes: file_feed_v1_feed_proto_depIdxs,
		MessageInfos:      file_feed_v1_feed_proto_msgTypes,
	}.Build()
	File_feed_v1_feed_proto = out.File
	file_feed_v1_feed_proto_goTypes = nil
	file_feed_v1_feed_proto_depIdxs = nil
}
