// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: user/v1/user.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// =========================批量获取用户信息============================
type BatchGetUserInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthorIds     []int64                `protobuf:"varint,1,rep,packed,name=author_ids,json=authorIds,proto3" json:"author_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetUserInfoRequest) Reset() {
	*x = BatchGetUserInfoRequest{}
	mi := &file_user_v1_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUserInfoRequest) ProtoMessage() {}

func (x *BatchGetUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUserInfoRequest.ProtoReflect.Descriptor instead.
func (*BatchGetUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{0}
}

func (x *BatchGetUserInfoRequest) GetAuthorIds() []int64 {
	if x != nil {
		return x.AuthorIds
	}
	return nil
}

type BatchGetUserInfoReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*Author              `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetUserInfoReply) Reset() {
	*x = BatchGetUserInfoReply{}
	mi := &file_user_v1_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetUserInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUserInfoReply) ProtoMessage() {}

func (x *BatchGetUserInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUserInfoReply.ProtoReflect.Descriptor instead.
func (*BatchGetUserInfoReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{1}
}

func (x *BatchGetUserInfoReply) GetUsers() []*Author {
	if x != nil {
		return x.Users
	}
	return nil
}

type Author struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AvatarUrl     string                 `protobuf:"bytes,3,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Author) Reset() {
	*x = Author{}
	mi := &file_user_v1_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Author) ProtoMessage() {}

func (x *Author) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Author.ProtoReflect.Descriptor instead.
func (*Author) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{2}
}

func (x *Author) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Author) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Author) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

// =========================用户存在============================
type CheckUserExistByUserIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckUserExistByUserIDRequest) Reset() {
	*x = CheckUserExistByUserIDRequest{}
	mi := &file_user_v1_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUserExistByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserExistByUserIDRequest) ProtoMessage() {}

func (x *CheckUserExistByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserExistByUserIDRequest.ProtoReflect.Descriptor instead.
func (*CheckUserExistByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{3}
}

func (x *CheckUserExistByUserIDRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CheckUserExistByUserIDReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exist         bool                   `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckUserExistByUserIDReply) Reset() {
	*x = CheckUserExistByUserIDReply{}
	mi := &file_user_v1_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUserExistByUserIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserExistByUserIDReply) ProtoMessage() {}

func (x *CheckUserExistByUserIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserExistByUserIDReply.ProtoReflect.Descriptor instead.
func (*CheckUserExistByUserIDReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{4}
}

func (x *CheckUserExistByUserIDReply) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // 用户名，最长为32位
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 密码，最长位32位
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_user_v1_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	StatusMsg     string                 `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
	UserId        int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Token         string                 `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterReply) Reset() {
	*x = RegisterReply{}
	mi := &file_user_v1_user_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReply) ProtoMessage() {}

func (x *RegisterReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReply.ProtoReflect.Descriptor instead.
func (*RegisterReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterReply) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *RegisterReply) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *RegisterReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RegisterReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// ==========================用户登录============================
type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_user_v1_user_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{7}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	StatusMsg     string                 `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
	UserId        int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Token         string                 `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,5,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginReply) Reset() {
	*x = LoginReply{}
	mi := &file_user_v1_user_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReply) ProtoMessage() {}

func (x *LoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReply.ProtoReflect.Descriptor instead.
func (*LoginReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{8}
}

func (x *LoginReply) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *LoginReply) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *LoginReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LoginReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginReply) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

// ===========================用户信息===========================
type UserInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CurrentUserId int64                  `protobuf:"varint,2,opt,name=current_user_id,json=currentUserId,proto3" json:"current_user_id,omitempty"` // 当前登录用户ID（用于判断是否关注）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfoRequest) Reset() {
	*x = UserInfoRequest{}
	mi := &file_user_v1_user_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoRequest) ProtoMessage() {}

func (x *UserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoRequest.ProtoReflect.Descriptor instead.
func (*UserInfoRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{9}
}

func (x *UserInfoRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserInfoRequest) GetCurrentUserId() int64 {
	if x != nil {
		return x.CurrentUserId
	}
	return 0
}

type UserInfoReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	StatusMsg     string                 `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
	User          *User                  `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfoReply) Reset() {
	*x = UserInfoReply{}
	mi := &file_user_v1_user_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoReply) ProtoMessage() {}

func (x *UserInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoReply.ProtoReflect.Descriptor instead.
func (*UserInfoReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{10}
}

func (x *UserInfoReply) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *UserInfoReply) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *UserInfoReply) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type User struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                 // 用户id
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                              // 用户名称
	FollowCount     int32                  `protobuf:"varint,3,opt,name=follow_count,json=followCount,proto3" json:"follow_count,omitempty"`            // 关注总数
	FollowerCount   int32                  `protobuf:"varint,4,opt,name=follower_count,json=followerCount,proto3" json:"follower_count,omitempty"`      // 粉丝总数
	IsFollow        bool                   `protobuf:"varint,5,opt,name=is_follow,json=isFollow,proto3" json:"is_follow,omitempty"`                     // true-已关注，false-未关注
	Avatar          string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                                          // 用户头像
	BackgroundImage string                 `protobuf:"bytes,7,opt,name=background_image,json=backgroundImage,proto3" json:"background_image,omitempty"` // 用户个人页顶部大图
	Signature       string                 `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`                                    // 个人简介
	TotalFavorited  int32                  `protobuf:"varint,9,opt,name=total_favorited,json=totalFavorited,proto3" json:"total_favorited,omitempty"`   // 获赞数量
	WorkCount       int32                  `protobuf:"varint,10,opt,name=work_count,json=workCount,proto3" json:"work_count,omitempty"`                 // 作品数量
	FavoriteCount   int32                  `protobuf:"varint,11,opt,name=favorite_count,json=favoriteCount,proto3" json:"favorite_count,omitempty"`     // 点赞数量
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_user_v1_user_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{11}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetFollowCount() int32 {
	if x != nil {
		return x.FollowCount
	}
	return 0
}

func (x *User) GetFollowerCount() int32 {
	if x != nil {
		return x.FollowerCount
	}
	return 0
}

func (x *User) GetIsFollow() bool {
	if x != nil {
		return x.IsFollow
	}
	return false
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *User) GetBackgroundImage() string {
	if x != nil {
		return x.BackgroundImage
	}
	return ""
}

func (x *User) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *User) GetTotalFavorited() int32 {
	if x != nil {
		return x.TotalFavorited
	}
	return 0
}

func (x *User) GetWorkCount() int32 {
	if x != nil {
		return x.WorkCount
	}
	return 0
}

func (x *User) GetFavoriteCount() int32 {
	if x != nil {
		return x.FavoriteCount
	}
	return 0
}

// ===========================解析token===========================
type ParseTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,2,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseTokenRequest) Reset() {
	*x = ParseTokenRequest{}
	mi := &file_user_v1_user_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseTokenRequest) ProtoMessage() {}

func (x *ParseTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseTokenRequest.ProtoReflect.Descriptor instead.
func (*ParseTokenRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{12}
}

func (x *ParseTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ParseTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type ParseTokenReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseTokenReply) Reset() {
	*x = ParseTokenReply{}
	mi := &file_user_v1_user_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseTokenReply) ProtoMessage() {}

func (x *ParseTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseTokenReply.ProtoReflect.Descriptor instead.
func (*ParseTokenReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{13}
}

func (x *ParseTokenReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RefreshRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefreshToken  string                 `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshRequest) Reset() {
	*x = RefreshRequest{}
	mi := &file_user_v1_user_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRequest) ProtoMessage() {}

func (x *RefreshRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRequest.ProtoReflect.Descriptor instead.
func (*RefreshRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{14}
}

func (x *RefreshRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type RefreshReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	StatusMsg     string                 `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshReply) Reset() {
	*x = RefreshReply{}
	mi := &file_user_v1_user_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshReply) ProtoMessage() {}

func (x *RefreshReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshReply.ProtoReflect.Descriptor instead.
func (*RefreshReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{15}
}

func (x *RefreshReply) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *RefreshReply) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *RefreshReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// ===========================批量获取用户详细信息===========================
type BatchGetUserDetailInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []int64                `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetUserDetailInfoRequest) Reset() {
	*x = BatchGetUserDetailInfoRequest{}
	mi := &file_user_v1_user_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetUserDetailInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUserDetailInfoRequest) ProtoMessage() {}

func (x *BatchGetUserDetailInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUserDetailInfoRequest.ProtoReflect.Descriptor instead.
func (*BatchGetUserDetailInfoRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{16}
}

func (x *BatchGetUserDetailInfoRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type BatchGetUserDetailInfoReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          []*User                `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetUserDetailInfoReply) Reset() {
	*x = BatchGetUserDetailInfoReply{}
	mi := &file_user_v1_user_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetUserDetailInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUserDetailInfoReply) ProtoMessage() {}

func (x *BatchGetUserDetailInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUserDetailInfoReply.ProtoReflect.Descriptor instead.
func (*BatchGetUserDetailInfoReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{17}
}

func (x *BatchGetUserDetailInfoReply) GetUser() []*User {
	if x != nil {
		return x.User
	}
	return nil
}

var File_user_v1_user_proto protoreflect.FileDescriptor

const file_user_v1_user_proto_rawDesc = "" +
	"\n" +
	"\x12user/v1/user.proto\x12\x04user\x1a\x1cgoogle/api/annotations.proto\"8\n" +
	"\x17BatchGetUserInfoRequest\x12\x1d\n" +
	"\n" +
	"author_ids\x18\x01 \x03(\x03R\tauthorIds\";\n" +
	"\x15BatchGetUserInfoReply\x12\"\n" +
	"\x05users\x18\x01 \x03(\v2\f.user.AuthorR\x05users\"K\n" +
	"\x06Author\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x03 \x01(\tR\tavatarUrl\"8\n" +
	"\x1dCheckUserExistByUserIDRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\"3\n" +
	"\x1bCheckUserExistByUserIDReply\x12\x14\n" +
	"\x05exist\x18\x01 \x01(\bR\x05exist\"I\n" +
	"\x0fRegisterRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"~\n" +
	"\rRegisterReply\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x1d\n" +
	"\n" +
	"status_msg\x18\x02 \x01(\tR\tstatusMsg\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\"F\n" +
	"\fLoginRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"\xa0\x01\n" +
	"\n" +
	"LoginReply\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x1d\n" +
	"\n" +
	"status_msg\x18\x02 \x01(\tR\tstatusMsg\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\x12#\n" +
	"\rrefresh_token\x18\x05 \x01(\tR\frefreshToken\"R\n" +
	"\x0fUserInfoRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12&\n" +
	"\x0fcurrent_user_id\x18\x02 \x01(\x03R\rcurrentUserId\"o\n" +
	"\rUserInfoReply\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x1d\n" +
	"\n" +
	"status_msg\x18\x02 \x01(\tR\tstatusMsg\x12\x1e\n" +
	"\x04user\x18\x03 \x01(\v2\n" +
	".user.UserR\x04user\"\xe1\x02\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\ffollow_count\x18\x03 \x01(\x05R\vfollowCount\x12%\n" +
	"\x0efollower_count\x18\x04 \x01(\x05R\rfollowerCount\x12\x1b\n" +
	"\tis_follow\x18\x05 \x01(\bR\bisFollow\x12\x16\n" +
	"\x06avatar\x18\x06 \x01(\tR\x06avatar\x12)\n" +
	"\x10background_image\x18\a \x01(\tR\x0fbackgroundImage\x12\x1c\n" +
	"\tsignature\x18\b \x01(\tR\tsignature\x12'\n" +
	"\x0ftotal_favorited\x18\t \x01(\x05R\x0etotalFavorited\x12\x1d\n" +
	"\n" +
	"work_count\x18\n" +
	" \x01(\x05R\tworkCount\x12%\n" +
	"\x0efavorite_count\x18\v \x01(\x05R\rfavoriteCount\"M\n" +
	"\x11ParseTokenRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12\"\n" +
	"\frefreshToken\x18\x02 \x01(\tR\frefreshToken\"*\n" +
	"\x0fParseTokenReply\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\"5\n" +
	"\x0eRefreshRequest\x12#\n" +
	"\rrefresh_token\x18\x01 \x01(\tR\frefreshToken\"d\n" +
	"\fRefreshReply\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x1d\n" +
	"\n" +
	"status_msg\x18\x02 \x01(\tR\tstatusMsg\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\"1\n" +
	"\x1dBatchGetUserDetailInfoRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\x03R\x03ids\"=\n" +
	"\x1bBatchGetUserDetailInfoReply\x12\x1e\n" +
	"\x04user\x18\x01 \x03(\v2\n" +
	".user.UserR\x04user2\x9f\x05\n" +
	"\vUserService\x12U\n" +
	"\bRegister\x12\x15.user.RegisterRequest\x1a\x13.user.RegisterReply\"\x1d\x82\xd3\xe4\x93\x02\x17:\x01*\"\x12/api/user/register\x12I\n" +
	"\x05Login\x12\x12.user.LoginRequest\x1a\x10.user.LoginReply\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/api/user/login\x12I\n" +
	"\bUserInfo\x12\x15.user.UserInfoRequest\x1a\x13.user.UserInfoReply\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/api/user\x128\n" +
	"\fRefreshToken\x12\x14.user.RefreshRequest\x1a\x12.user.RefreshReply\x12<\n" +
	"\n" +
	"ParseToken\x12\x17.user.ParseTokenRequest\x1a\x15.user.ParseTokenReply\x12y\n" +
	"\x16CheckUserExistByUserID\x12#.user.CheckUserExistByUserIDRequest\x1a!.user.CheckUserExistByUserIDReply\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/api/user/check\x12N\n" +
	"\x10BatchGetUserInfo\x12\x1d.user.BatchGetUserInfoRequest\x1a\x1b.user.BatchGetUserInfoReply\x12`\n" +
	"\x16BatchGetUserDetailInfo\x12#.user.BatchGetUserDetailInfoRequest\x1a!.user.BatchGetUserDetailInfoReplyB\x15Z\x13user/api/user/v1;v1b\x06proto3"

var (
	file_user_v1_user_proto_rawDescOnce sync.Once
	file_user_v1_user_proto_rawDescData []byte
)

func file_user_v1_user_proto_rawDescGZIP() []byte {
	file_user_v1_user_proto_rawDescOnce.Do(func() {
		file_user_v1_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_user_v1_user_proto_rawDesc), len(file_user_v1_user_proto_rawDesc)))
	})
	return file_user_v1_user_proto_rawDescData
}

var file_user_v1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_user_v1_user_proto_goTypes = []any{
	(*BatchGetUserInfoRequest)(nil),       // 0: user.BatchGetUserInfoRequest
	(*BatchGetUserInfoReply)(nil),         // 1: user.BatchGetUserInfoReply
	(*Author)(nil),                        // 2: user.Author
	(*CheckUserExistByUserIDRequest)(nil), // 3: user.CheckUserExistByUserIDRequest
	(*CheckUserExistByUserIDReply)(nil),   // 4: user.CheckUserExistByUserIDReply
	(*RegisterRequest)(nil),               // 5: user.RegisterRequest
	(*RegisterReply)(nil),                 // 6: user.RegisterReply
	(*LoginRequest)(nil),                  // 7: user.LoginRequest
	(*LoginReply)(nil),                    // 8: user.LoginReply
	(*UserInfoRequest)(nil),               // 9: user.UserInfoRequest
	(*UserInfoReply)(nil),                 // 10: user.UserInfoReply
	(*User)(nil),                          // 11: user.User
	(*ParseTokenRequest)(nil),             // 12: user.ParseTokenRequest
	(*ParseTokenReply)(nil),               // 13: user.ParseTokenReply
	(*RefreshRequest)(nil),                // 14: user.RefreshRequest
	(*RefreshReply)(nil),                  // 15: user.RefreshReply
	(*BatchGetUserDetailInfoRequest)(nil), // 16: user.BatchGetUserDetailInfoRequest
	(*BatchGetUserDetailInfoReply)(nil),   // 17: user.BatchGetUserDetailInfoReply
}
var file_user_v1_user_proto_depIdxs = []int32{
	2,  // 0: user.BatchGetUserInfoReply.users:type_name -> user.Author
	11, // 1: user.UserInfoReply.user:type_name -> user.User
	11, // 2: user.BatchGetUserDetailInfoReply.user:type_name -> user.User
	5,  // 3: user.UserService.Register:input_type -> user.RegisterRequest
	7,  // 4: user.UserService.Login:input_type -> user.LoginRequest
	9,  // 5: user.UserService.UserInfo:input_type -> user.UserInfoRequest
	14, // 6: user.UserService.RefreshToken:input_type -> user.RefreshRequest
	12, // 7: user.UserService.ParseToken:input_type -> user.ParseTokenRequest
	3,  // 8: user.UserService.CheckUserExistByUserID:input_type -> user.CheckUserExistByUserIDRequest
	0,  // 9: user.UserService.BatchGetUserInfo:input_type -> user.BatchGetUserInfoRequest
	16, // 10: user.UserService.BatchGetUserDetailInfo:input_type -> user.BatchGetUserDetailInfoRequest
	6,  // 11: user.UserService.Register:output_type -> user.RegisterReply
	8,  // 12: user.UserService.Login:output_type -> user.LoginReply
	10, // 13: user.UserService.UserInfo:output_type -> user.UserInfoReply
	15, // 14: user.UserService.RefreshToken:output_type -> user.RefreshReply
	13, // 15: user.UserService.ParseToken:output_type -> user.ParseTokenReply
	4,  // 16: user.UserService.CheckUserExistByUserID:output_type -> user.CheckUserExistByUserIDReply
	1,  // 17: user.UserService.BatchGetUserInfo:output_type -> user.BatchGetUserInfoReply
	17, // 18: user.UserService.BatchGetUserDetailInfo:output_type -> user.BatchGetUserDetailInfoReply
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_user_v1_user_proto_init() }
func file_user_v1_user_proto_init() {
	if File_user_v1_user_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_user_v1_user_proto_rawDesc), len(file_user_v1_user_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_v1_user_proto_goTypes,
		DependencyIndexes: file_user_v1_user_proto_depIdxs,
		MessageInfos:      file_user_v1_user_proto_msgTypes,
	}.Build()
	File_user_v1_user_proto = out.File
	file_user_v1_user_proto_goTypes = nil
	file_user_v1_user_proto_depIdxs = nil
}
