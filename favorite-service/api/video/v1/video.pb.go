// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: video/v1/video.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 批量获取视频信息
type BatchGetVideoInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []int64                `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetVideoInfoRequest) Reset() {
	*x = BatchGetVideoInfoRequest{}
	mi := &file_video_v1_video_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetVideoInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetVideoInfoRequest) ProtoMessage() {}

func (x *BatchGetVideoInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetVideoInfoRequest.ProtoReflect.Descriptor instead.
func (*BatchGetVideoInfoRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{0}
}

func (x *BatchGetVideoInfoRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *BatchGetVideoInfoRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *BatchGetVideoInfoRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type BatchGetVideoInfoReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Videos        []*Video               `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetVideoInfoReply) Reset() {
	*x = BatchGetVideoInfoReply{}
	mi := &file_video_v1_video_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetVideoInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetVideoInfoReply) ProtoMessage() {}

func (x *BatchGetVideoInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetVideoInfoReply.ProtoReflect.Descriptor instead.
func (*BatchGetVideoInfoReply) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{1}
}

func (x *BatchGetVideoInfoReply) GetVideos() []*Video {
	if x != nil {
		return x.Videos
	}
	return nil
}

// 上传视频
type UploadVideoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`         // 视频二进制流（注意grpc限制，推荐分片或前端直传OSS）
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` // 文件名（带后缀）
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`       // 用户认证token
	RefreshToken  string                 `protobuf:"bytes,4,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadVideoRequest) Reset() {
	*x = UploadVideoRequest{}
	mi := &file_video_v1_video_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoRequest) ProtoMessage() {}

func (x *UploadVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoRequest.ProtoReflect.Descriptor instead.
func (*UploadVideoRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{2}
}

func (x *UploadVideoRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UploadVideoRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadVideoRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UploadVideoRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type UploadVideoReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayUrl       string                 `protobuf:"bytes,1,opt,name=play_url,json=playUrl,proto3" json:"play_url,omitempty"`    // 视频播放地址（存储服务返回）
	CoverUrl      string                 `protobuf:"bytes,2,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"` // 视频封面地址（可能为空，后台异步生成后更新）
	Duration      float32                `protobuf:"fixed32,3,opt,name=duration,proto3" json:"duration,omitempty"`               // 视频时长（秒）
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                   // 额外信息
	VideoId       int64                  `protobuf:"varint,5,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`   // 如果已生成数据库记录，可返回
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadVideoReply) Reset() {
	*x = UploadVideoReply{}
	mi := &file_video_v1_video_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadVideoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoReply) ProtoMessage() {}

func (x *UploadVideoReply) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoReply.ProtoReflect.Descriptor instead.
func (*UploadVideoReply) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{3}
}

func (x *UploadVideoReply) GetPlayUrl() string {
	if x != nil {
		return x.PlayUrl
	}
	return ""
}

func (x *UploadVideoReply) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *UploadVideoReply) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *UploadVideoReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadVideoReply) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

// 创建视频信息
type CreateVideoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	PlayUrl       string                 `protobuf:"bytes,3,opt,name=play_url,json=playUrl,proto3" json:"play_url,omitempty"`
	CoverUrl      string                 `protobuf:"bytes,4,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`
	Duration      float32                `protobuf:"fixed32,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Tags          string                 `protobuf:"bytes,6,opt,name=tags,proto3" json:"tags,omitempty"`
	IsPublic      bool                   `protobuf:"varint,7,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	IsOriginal    bool                   `protobuf:"varint,8,opt,name=is_original,json=isOriginal,proto3" json:"is_original,omitempty"`
	SourceUrl     string                 `protobuf:"bytes,9,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"` // 原始视频来源（如转载，is_original 为 false 时使用）
	Token         string                 `protobuf:"bytes,10,opt,name=token,proto3" json:"token,omitempty"`                         // JWT 或其它认证方式
	RefreshToken  string                 `protobuf:"bytes,11,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVideoRequest) Reset() {
	*x = CreateVideoRequest{}
	mi := &file_video_v1_video_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVideoRequest) ProtoMessage() {}

func (x *CreateVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVideoRequest.ProtoReflect.Descriptor instead.
func (*CreateVideoRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{4}
}

func (x *CreateVideoRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateVideoRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateVideoRequest) GetPlayUrl() string {
	if x != nil {
		return x.PlayUrl
	}
	return ""
}

func (x *CreateVideoRequest) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *CreateVideoRequest) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CreateVideoRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *CreateVideoRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *CreateVideoRequest) GetIsOriginal() bool {
	if x != nil {
		return x.IsOriginal
	}
	return false
}

func (x *CreateVideoRequest) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *CreateVideoRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CreateVideoRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type CreateVideoReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       int64                  `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVideoReply) Reset() {
	*x = CreateVideoReply{}
	mi := &file_video_v1_video_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVideoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVideoReply) ProtoMessage() {}

func (x *CreateVideoReply) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVideoReply.ProtoReflect.Descriptor instead.
func (*CreateVideoReply) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{5}
}

func (x *CreateVideoReply) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

// 获取视频信息
type ListUserVideosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,3,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserVideosRequest) Reset() {
	*x = ListUserVideosRequest{}
	mi := &file_video_v1_video_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserVideosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserVideosRequest) ProtoMessage() {}

func (x *ListUserVideosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserVideosRequest.ProtoReflect.Descriptor instead.
func (*ListUserVideosRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{6}
}

func (x *ListUserVideosRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListUserVideosRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ListUserVideosRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *ListUserVideosRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListUserVideosRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserVideosRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ListUserVideosRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type ListUserVideosReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Videos        []*Video               `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // 总视频数
	CurrentPage   int32                  `protobuf:"varint,3,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserVideosReply) Reset() {
	*x = ListUserVideosReply{}
	mi := &file_video_v1_video_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserVideosReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserVideosReply) ProtoMessage() {}

func (x *ListUserVideosReply) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserVideosReply.ProtoReflect.Descriptor instead.
func (*ListUserVideosReply) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{7}
}

func (x *ListUserVideosReply) GetVideos() []*Video {
	if x != nil {
		return x.Videos
	}
	return nil
}

func (x *ListUserVideosReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUserVideosReply) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *ListUserVideosReply) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type Video struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId          int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PlayUrl         string                 `protobuf:"bytes,3,opt,name=play_url,json=playUrl,proto3" json:"play_url,omitempty"`
	CoverUrl        string                 `protobuf:"bytes,4,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`
	Title           string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Description     string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Duration        float32                `protobuf:"fixed32,7,opt,name=duration,proto3" json:"duration,omitempty"`
	Tags            string                 `protobuf:"bytes,8,opt,name=tags,proto3" json:"tags,omitempty"`
	FavoriteCnt     int32                  `protobuf:"varint,9,opt,name=favorite_cnt,json=favoriteCnt,proto3" json:"favorite_cnt,omitempty"`
	CommentCnt      int32                  `protobuf:"varint,10,opt,name=comment_cnt,json=commentCnt,proto3" json:"comment_cnt,omitempty"`
	ShareCnt        int32                  `protobuf:"varint,11,opt,name=share_cnt,json=shareCnt,proto3" json:"share_cnt,omitempty"`
	CollectCnt      int32                  `protobuf:"varint,12,opt,name=collect_cnt,json=collectCnt,proto3" json:"collect_cnt,omitempty"`
	IsPublic        bool                   `protobuf:"varint,13,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	AuditStatus     int32                  `protobuf:"varint,14,opt,name=audit_status,json=auditStatus,proto3" json:"audit_status,omitempty"`
	IsOriginal      bool                   `protobuf:"varint,15,opt,name=is_original,json=isOriginal,proto3" json:"is_original,omitempty"`
	SourceUrl       string                 `protobuf:"bytes,16,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	TranscodeStatus int32                  `protobuf:"varint,17,opt,name=transcode_status,json=transcodeStatus,proto3" json:"transcode_status,omitempty"`
	VideoWidth      int32                  `protobuf:"varint,18,opt,name=video_width,json=videoWidth,proto3" json:"video_width,omitempty"`
	VideoHeight     int32                  `protobuf:"varint,19,opt,name=video_height,json=videoHeight,proto3" json:"video_height,omitempty"`
	BizExt          string                 `protobuf:"bytes,20,opt,name=biz_ext,json=bizExt,proto3" json:"biz_ext,omitempty"`
	Reserved_1      string                 `protobuf:"bytes,21,opt,name=reserved_1,json=reserved1,proto3" json:"reserved_1,omitempty"`
	Reserved_2      string                 `protobuf:"bytes,22,opt,name=reserved_2,json=reserved2,proto3" json:"reserved_2,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdateTime      *timestamppb.Timestamp `protobuf:"bytes,24,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	DeleteAt        *timestamppb.Timestamp `protobuf:"bytes,25,opt,name=delete_at,json=deleteAt,proto3" json:"delete_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Video) Reset() {
	*x = Video{}
	mi := &file_video_v1_video_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Video) ProtoMessage() {}

func (x *Video) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Video.ProtoReflect.Descriptor instead.
func (*Video) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{8}
}

func (x *Video) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Video) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Video) GetPlayUrl() string {
	if x != nil {
		return x.PlayUrl
	}
	return ""
}

func (x *Video) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *Video) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Video) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Video) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Video) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *Video) GetFavoriteCnt() int32 {
	if x != nil {
		return x.FavoriteCnt
	}
	return 0
}

func (x *Video) GetCommentCnt() int32 {
	if x != nil {
		return x.CommentCnt
	}
	return 0
}

func (x *Video) GetShareCnt() int32 {
	if x != nil {
		return x.ShareCnt
	}
	return 0
}

func (x *Video) GetCollectCnt() int32 {
	if x != nil {
		return x.CollectCnt
	}
	return 0
}

func (x *Video) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *Video) GetAuditStatus() int32 {
	if x != nil {
		return x.AuditStatus
	}
	return 0
}

func (x *Video) GetIsOriginal() bool {
	if x != nil {
		return x.IsOriginal
	}
	return false
}

func (x *Video) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *Video) GetTranscodeStatus() int32 {
	if x != nil {
		return x.TranscodeStatus
	}
	return 0
}

func (x *Video) GetVideoWidth() int32 {
	if x != nil {
		return x.VideoWidth
	}
	return 0
}

func (x *Video) GetVideoHeight() int32 {
	if x != nil {
		return x.VideoHeight
	}
	return 0
}

func (x *Video) GetBizExt() string {
	if x != nil {
		return x.BizExt
	}
	return ""
}

func (x *Video) GetReserved_1() string {
	if x != nil {
		return x.Reserved_1
	}
	return ""
}

func (x *Video) GetReserved_2() string {
	if x != nil {
		return x.Reserved_2
	}
	return ""
}

func (x *Video) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Video) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Video) GetDeleteAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteAt
	}
	return nil
}

var File_video_v1_video_proto protoreflect.FileDescriptor

const file_video_v1_video_proto_rawDesc = "" +
	"\n" +
	"\x14video/v1/video.proto\x12\x05video\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\\\n" +
	"\x18BatchGetVideoInfoRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\x03R\x03ids\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1a\n" +
	"\bpageSize\x18\x03 \x01(\x05R\bpageSize\">\n" +
	"\x16BatchGetVideoInfoReply\x12$\n" +
	"\x06videos\x18\x01 \x03(\v2\f.video.VideoR\x06videos\"~\n" +
	"\x12UploadVideoRequest\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\x12\"\n" +
	"\frefreshToken\x18\x04 \x01(\tR\frefreshToken\"\x9b\x01\n" +
	"\x10UploadVideoReply\x12\x19\n" +
	"\bplay_url\x18\x01 \x01(\tR\aplayUrl\x12\x1b\n" +
	"\tcover_url\x18\x02 \x01(\tR\bcoverUrl\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x02R\bduration\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x19\n" +
	"\bvideo_id\x18\x05 \x01(\x03R\avideoId\"\xcb\x02\n" +
	"\x12CreateVideoRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x19\n" +
	"\bplay_url\x18\x03 \x01(\tR\aplayUrl\x12\x1b\n" +
	"\tcover_url\x18\x04 \x01(\tR\bcoverUrl\x12\x1a\n" +
	"\bduration\x18\x05 \x01(\x02R\bduration\x12\x12\n" +
	"\x04tags\x18\x06 \x01(\tR\x04tags\x12\x1b\n" +
	"\tis_public\x18\a \x01(\bR\bisPublic\x12\x1f\n" +
	"\vis_original\x18\b \x01(\bR\n" +
	"isOriginal\x12\x1d\n" +
	"\n" +
	"source_url\x18\t \x01(\tR\tsourceUrl\x12\x14\n" +
	"\x05token\x18\n" +
	" \x01(\tR\x05token\x12\"\n" +
	"\frefreshToken\x18\v \x01(\tR\frefreshToken\"-\n" +
	"\x10CreateVideoReply\x12\x19\n" +
	"\bvideo_id\x18\x01 \x01(\x03R\avideoId\"\x8d\x02\n" +
	"\x15ListUserVideosRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12\"\n" +
	"\frefreshToken\x18\x03 \x01(\tR\frefreshToken\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\x129\n" +
	"\n" +
	"start_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\"\x91\x01\n" +
	"\x13ListUserVideosReply\x12$\n" +
	"\x06videos\x18\x01 \x03(\v2\f.video.VideoR\x06videos\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12!\n" +
	"\fcurrent_page\x18\x03 \x01(\x05R\vcurrentPage\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"\xc9\x06\n" +
	"\x05Video\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x19\n" +
	"\bplay_url\x18\x03 \x01(\tR\aplayUrl\x12\x1b\n" +
	"\tcover_url\x18\x04 \x01(\tR\bcoverUrl\x12\x14\n" +
	"\x05title\x18\x05 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12\x1a\n" +
	"\bduration\x18\a \x01(\x02R\bduration\x12\x12\n" +
	"\x04tags\x18\b \x01(\tR\x04tags\x12!\n" +
	"\ffavorite_cnt\x18\t \x01(\x05R\vfavoriteCnt\x12\x1f\n" +
	"\vcomment_cnt\x18\n" +
	" \x01(\x05R\n" +
	"commentCnt\x12\x1b\n" +
	"\tshare_cnt\x18\v \x01(\x05R\bshareCnt\x12\x1f\n" +
	"\vcollect_cnt\x18\f \x01(\x05R\n" +
	"collectCnt\x12\x1b\n" +
	"\tis_public\x18\r \x01(\bR\bisPublic\x12!\n" +
	"\faudit_status\x18\x0e \x01(\x05R\vauditStatus\x12\x1f\n" +
	"\vis_original\x18\x0f \x01(\bR\n" +
	"isOriginal\x12\x1d\n" +
	"\n" +
	"source_url\x18\x10 \x01(\tR\tsourceUrl\x12)\n" +
	"\x10transcode_status\x18\x11 \x01(\x05R\x0ftranscodeStatus\x12\x1f\n" +
	"\vvideo_width\x18\x12 \x01(\x05R\n" +
	"videoWidth\x12!\n" +
	"\fvideo_height\x18\x13 \x01(\x05R\vvideoHeight\x12\x17\n" +
	"\abiz_ext\x18\x14 \x01(\tR\x06bizExt\x12\x1d\n" +
	"\n" +
	"reserved_1\x18\x15 \x01(\tR\treserved1\x12\x1d\n" +
	"\n" +
	"reserved_2\x18\x16 \x01(\tR\treserved2\x129\n" +
	"\n" +
	"created_at\x18\x17 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12;\n" +
	"\vupdate_time\x18\x18 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\x127\n" +
	"\tdelete_at\x18\x19 \x01(\v2\x1a.google.protobuf.TimestampR\bdeleteAt2\x85\x03\n" +
	"\fVideoService\x12_\n" +
	"\vCreateVideo\x12\x19.video.CreateVideoRequest\x1a\x17.video.CreateVideoReply\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/api/video/create\x12^\n" +
	"\x0eListUserVideos\x12\x1c.video.ListUserVideosRequest\x1a\x1a.video.ListUserVideosReply\"\x12\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/api/video\x12_\n" +
	"\vUploadVideo\x12\x19.video.UploadVideoRequest\x1a\x17.video.UploadVideoReply\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/api/video/upload\x12S\n" +
	"\x11BatchGetVideoInfo\x12\x1f.video.BatchGetVideoInfoRequest\x1a\x1d.video.BatchGetVideoInfoReplyB\x10Z\x0euser/api/v1;v1b\x06proto3"

var (
	file_video_v1_video_proto_rawDescOnce sync.Once
	file_video_v1_video_proto_rawDescData []byte
)

func file_video_v1_video_proto_rawDescGZIP() []byte {
	file_video_v1_video_proto_rawDescOnce.Do(func() {
		file_video_v1_video_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_video_v1_video_proto_rawDesc), len(file_video_v1_video_proto_rawDesc)))
	})
	return file_video_v1_video_proto_rawDescData
}

var file_video_v1_video_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_video_v1_video_proto_goTypes = []any{
	(*BatchGetVideoInfoRequest)(nil), // 0: video.BatchGetVideoInfoRequest
	(*BatchGetVideoInfoReply)(nil),   // 1: video.BatchGetVideoInfoReply
	(*UploadVideoRequest)(nil),       // 2: video.UploadVideoRequest
	(*UploadVideoReply)(nil),         // 3: video.UploadVideoReply
	(*CreateVideoRequest)(nil),       // 4: video.CreateVideoRequest
	(*CreateVideoReply)(nil),         // 5: video.CreateVideoReply
	(*ListUserVideosRequest)(nil),    // 6: video.ListUserVideosRequest
	(*ListUserVideosReply)(nil),      // 7: video.ListUserVideosReply
	(*Video)(nil),                    // 8: video.Video
	(*timestamppb.Timestamp)(nil),    // 9: google.protobuf.Timestamp
}
var file_video_v1_video_proto_depIdxs = []int32{
	8,  // 0: video.BatchGetVideoInfoReply.videos:type_name -> video.Video
	9,  // 1: video.ListUserVideosRequest.start_time:type_name -> google.protobuf.Timestamp
	9,  // 2: video.ListUserVideosRequest.end_time:type_name -> google.protobuf.Timestamp
	8,  // 3: video.ListUserVideosReply.videos:type_name -> video.Video
	9,  // 4: video.Video.created_at:type_name -> google.protobuf.Timestamp
	9,  // 5: video.Video.update_time:type_name -> google.protobuf.Timestamp
	9,  // 6: video.Video.delete_at:type_name -> google.protobuf.Timestamp
	4,  // 7: video.VideoService.CreateVideo:input_type -> video.CreateVideoRequest
	6,  // 8: video.VideoService.ListUserVideos:input_type -> video.ListUserVideosRequest
	2,  // 9: video.VideoService.UploadVideo:input_type -> video.UploadVideoRequest
	0,  // 10: video.VideoService.BatchGetVideoInfo:input_type -> video.BatchGetVideoInfoRequest
	5,  // 11: video.VideoService.CreateVideo:output_type -> video.CreateVideoReply
	7,  // 12: video.VideoService.ListUserVideos:output_type -> video.ListUserVideosReply
	3,  // 13: video.VideoService.UploadVideo:output_type -> video.UploadVideoReply
	1,  // 14: video.VideoService.BatchGetVideoInfo:output_type -> video.BatchGetVideoInfoReply
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_video_v1_video_proto_init() }
func file_video_v1_video_proto_init() {
	if File_video_v1_video_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_video_v1_video_proto_rawDesc), len(file_video_v1_video_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_video_v1_video_proto_goTypes,
		DependencyIndexes: file_video_v1_video_proto_depIdxs,
		MessageInfos:      file_video_v1_video_proto_msgTypes,
	}.Build()
	File_video_v1_video_proto = out.File
	file_video_v1_video_proto_goTypes = nil
	file_video_v1_video_proto_depIdxs = nil
}
